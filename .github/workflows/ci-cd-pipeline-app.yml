# Github actions for CI and CD workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Ionic Angular and Python application

on:
  push:
    branches: [ feature/** ]
  pull_request:
    types:
      - assigned
      - unassigned
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: [ develop, release, main ]

jobs:
  deploy-backend-python:
    name: CI-Backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy Flask to Heroku
      uses: AkhileshNS/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_BACK }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: true
        appdir: flaskr

  deploy-frontend-angular:
    name: CD-Frontend
    runs-on: ubuntu-latest
    needs: [ deploy-backend-python ]
    steps:
    - uses: actions/checkout@v2
    - name: Deploy Nginx to serve angular to Heroku
      uses: AkhileshNS/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_FRONT }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: true
        appdir: front-end/tutorial-canciones
        dontuseforce: true
        docker_build_args: |
          ENV_TYPE
      env:
          ENV_TYPE: production

  deploy-backend-python-qa:
    name: CI-Backend-qa
    runs-on: ubuntu-latest
    needs: [ deploy-frontend-angular ]
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Flask to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_BACK_QA }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          appdir: flaskr

  deploy-frontend-angular-qa:
    name: CD-Frontend-qa
    needs: [ deploy-backend-python-qa ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy Nginx to serve angular to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME_FRONT_QA }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          dontuseforce: true
          appdir: front-end/tutorial-canciones
          docker_build_args: |
            ENV_TYPE
        env:
            ENV_TYPE: production